import React, { useState, useEffect } from 'react';
import { useForm, FormProvider } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import { Building2, MapPin, Clock } from 'lucide-react';

import Card from '../../ui/Card';
import TextField from '../../ui/form/fields/TextField';
import PhoneField from '../../ui/form/fields/PhoneField';
import UrlField from '../../ui/form/fields/UrlField';
import MapPicker from '../../ui/form/fields/MapPicker';
import TimeField from '../../ui/form/fields/TimeField';
import Switch from '../../ui/Switch';
import { mallSchema, MallInput } from '../validation/mall.schema';
import { useSafeSubmit } from '../hooks/useSafeSubmit';
import { createMall, updateMall } from '../../services/firebase/firestore';
import { Mall } from '../../types/mall-system';

interface MallFormProps {
  mode: 'create' | 'edit';
  mall?: Mall;
  onSuccess?: (mallName?: string) => void;
}

export default function MallForm({ mode, mall, onSuccess }: MallFormProps) {
  const [isEveryday, setIsEveryday] = useState(true);
  // const [logoUrl, setLogoUrl] = useState<string | null>(mall?.logoUrl || null);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const { isLoading } = useSafeSubmit({
    formName: `mall_${mode}`,
    successMessage:
      mode === 'create'
        ? '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à üéâ'
        : '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚úÖ',
    errorMessage:
      mode === 'create'
        ? '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ'
        : '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ',
  });

  const form = useForm({
    resolver: zodResolver(mallSchema) as any,
    defaultValues: {
      displayName: mall?.displayName || '',
      name: mall?.name || '',
      address: mall?.address || '',
      district: mall?.district || '',
      // v2 schema: ‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏≤‡∏Å top-level fields
      phone: mall?.contact?.phone || '',
      website: mall?.contact?.website || '',
      social: mall?.contact?.social || '',
      facebook: (mall?.contact as any)?.facebook || '',
      line: (mall?.contact as any)?.line || '',
      // ‡πÑ‡∏°‡πà default ‡πÄ‡∏õ‡πá‡∏ô 0 - ‡∏õ‡∏•‡πà‡∏≠‡∏¢ undefined ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏à‡∏£‡∏¥‡∏á
      lat: (() => {
        const lat0 = mall?.lat ?? mall?.coords?.lat;
        return typeof lat0 === 'number' ? lat0 : undefined;
      })(),
      lng: (() => {
        const lng0 = mall?.lng ?? mall?.coords?.lng;
        return typeof lng0 === 'number' ? lng0 : undefined;
      })(),
      location: (() => {
        const lat0 = mall?.lat ?? mall?.coords?.lat;
        const lng0 = mall?.lng ?? mall?.coords?.lng;
        return typeof lat0 === 'number' && typeof lng0 === 'number'
          ? { lat: lat0, lng: lng0 }
          : undefined;
      })(),
      // v2 schema: ‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏≤‡∏Å openTime/closeTime
      openTime: (mall as any)?.openTime || mall?.hours?.open || '10:00',
      closeTime: (mall as any)?.closeTime || mall?.hours?.close || '22:00',
      // Individual day hours
      'hours.mon': '',
      'hours.tue': '',
      'hours.wed': '',
      'hours.thu': '',
      'hours.fri': '',
      'hours.sat': '',
      'hours.sun': '',
    },
  });

  // Debug: Log mall data (only when mall changes)
  useEffect(() => {
    if (mall) {
      console.log('üîç MallForm received mall data:', mall);
    }
  }, [mall?.id]);

  const handleSubmit = async (values: any) => {
    console.log('üöÄ MallForm handleSubmit called with values:', values);
    console.log('üîç Form errors:', form.formState.errors);
    console.log('üîç Form is valid:', form.formState.isValid);
    console.log('üîç Form is dirty:', form.formState.isDirty);

    if (isSubmitting) {
      console.log('‚ö†Ô∏è Already submitting, ignoring duplicate submission');
      return;
    }

    setIsSubmitting(true);

    try {
      console.log('üîÑ Starting mall submission process...');

      // Map payload ‡∏ï‡∏≤‡∏° schema v2 (‡πÑ‡∏°‡πà‡∏™‡πà‡∏á hours legacy)
      const loc =
        values.location ??
        (typeof values.lat === 'number' && typeof values.lng === 'number'
          ? { lat: values.lat, lng: values.lng }
          : undefined);

      const payload: MallInput = {
        displayName: values.displayName,
        name: values.name || undefined,
        address: values.address,
        district: values.district,
        phone: values.phone || undefined,
        website: values.website || undefined,
        social: values.social || undefined,
        // ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡πÇ‡∏ã‡πÄ‡∏ä‡∏µ‡∏¢‡∏• (‡∏°‡∏µ‡∏Ñ‡∏µ‡∏¢‡πå‡πÄ‡∏û‡∏¥‡πà‡∏° ‡πÅ‡∏ï‡πà‡πÇ‡∏≠‡πÄ‡∏Ñ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ updateMall ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö)
        facebook: values.facebook || undefined,
        line: values.line || undefined,
        openTime: values.openTime || undefined,
        closeTime: values.closeTime || undefined,
        // ‡∏û‡∏¥‡∏Å‡∏±‡∏î - ‡∏™‡πà‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
        location:
          loc && typeof loc.lat === 'number' && typeof loc.lng === 'number'
            ? loc
            : undefined,
      } as any;

      console.log('üîÑ Submitting mall data (v2 schema):', payload);

      if (mode === 'create') {
        console.log('üìù Creating new mall...');
        await createMall(payload); // ‡∏£‡∏≠‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡∏à‡∏£‡∏¥‡∏á
        console.log('‚úÖ Mall created successfully');
      } else if (mall?.id) {
        console.log('üìù Updating existing mall:', mall.id);
        await updateMall(mall.id, payload);
        console.log('‚úÖ Mall updated successfully');
      } else {
        throw new Error('‡πÑ‡∏°‡πà‡∏û‡∏ö ID ‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï');
      }

      // Call onSuccess callback ‡∏´‡∏•‡∏±‡∏á await createMall ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
      console.log('üéâ Calling onSuccess callback...');
      console.log('üîç onSuccess function:', onSuccess);
      console.log('üîç payload.displayName:', payload.displayName);
      onSuccess?.(payload.displayName);
      console.log('‚úÖ onSuccess callback completed');
    } catch (error) {
      console.error('‚ùå Mall submission failed:', error);
      const errorMessage =
        error instanceof Error
          ? error.message
          : '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•';
      // ‡πÅ‡∏™‡∏î‡∏á error ‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°
      form.setError('displayName', { message: errorMessage });
    } finally {
      setIsSubmitting(false);
    }
  };

  // const handleWebsiteBlur = (e: React.FocusEvent<HTMLInputElement>) => {
  //   const value = e.target.value.trim();
  //   if (value && !value.startsWith('http://') && !value.startsWith('https://')) {
  //     form.setValue('website' as any, `https://${value}`, { shouldDirty: true, shouldValidate: true });
  //   }
  // };

  return (
    <div className="space-y-6">
      <FormProvider {...form}>
        <form
          onSubmit={form.handleSubmit(handleSubmit, errors => {
            console.log('‚ùå Form validation errors:', errors);
          })}
          className="space-y-6"
        >
          {/* üè¢ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ */}
          <Card>
            <div className="flex items-center space-x-2 mb-6">
              <Building2 className="w-5 h-5 text-blue-600" />
              <h2 className="text-xl font-semibold text-gray-900">
                ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
              </h2>
            </div>

            <div className="space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <TextField
                  name="displayName"
                  label="‡∏ä‡∏∑‡πà‡∏≠‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
                  placeholder="‡πÄ‡∏ä‡πà‡∏ô Central Embassy, MBK Center, Terminal 21, Siam Paragon"
                  helper="‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô"
                  required
                />

                <TextField
                  name="name"
                  label="Slug (‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå)"
                  placeholder="central-rama-3"
                  helper="‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö URL (‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥)"
                />
              </div>

              <div className="space-y-4">
                <TextField
                  name="address"
                  label="‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà"
                  placeholder="79 Sathupradit Rd, Chong Nonsi, Yan Nawa, Bangkok"
                  helper="‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏ï‡πá‡∏°‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≤‡∏á"
                  required
                />

                <TextField
                  name="district"
                  label="‡πÄ‡∏Ç‡∏ï/‡∏≠‡∏≥‡πÄ‡∏†‡∏≠"
                  placeholder="Yan Nawa"
                  helper="‡πÄ‡∏Ç‡∏ï‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏≥‡πÄ‡∏†‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á"
                  required
                />
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <PhoneField
                  name="phone"
                  label="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£"
                  placeholder="02-xxx-xxxx ‡∏´‡∏£‡∏∑‡∏≠ +66 xx xxx xxxx"
                  helper="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏´‡πâ‡∏≤‡∏á"
                />

                <UrlField
                  name="website"
                  label="‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå"
                  placeholder="central.co.th"
                  helper="‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£ (auto-https)"
                />
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <TextField
                  name="facebook"
                  label="Facebook"
                  placeholder="facebook.com/centralplaza"
                  helper="Facebook page ‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≤‡∏á"
                />

                <TextField
                  name="line"
                  label="Line"
                  placeholder="@centralplaza"
                  helper="Line Official Account"
                />
              </div>
            </div>
          </Card>

          {/* üó∫Ô∏è ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á & ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà */}
          <Card>
            <div className="flex items-center space-x-2 mb-6">
              <MapPin className="w-5 h-5 text-green-600" />
              <h2 className="text-xl font-semibold text-gray-900">
                ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á & ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà
              </h2>
            </div>

            <MapPicker
              name="location"
              label="‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á"
              helper="‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏õ‡∏∏‡πà‡∏° '‡πÉ‡∏ä‡πâ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô'"
            />
          </Card>

          {/* üïê ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ */}
          <Card>
            <div className="flex items-center space-x-2 mb-6">
              <Clock className="w-5 h-5 text-orange-600" />
              <h2 className="text-xl font-semibold text-gray-900">‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£</h2>
            </div>

            <div className="space-y-4">
              <Switch
                checked={isEveryday}
                onCheckedChange={setIsEveryday}
                label="‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô"
              />

              {isEveryday ? (
                <div className="bg-gray-50 rounded-lg p-4">
                  <div className="grid grid-cols-2 gap-4">
                    <TimeField
                      name="openTime"
                      label="‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡∏¥‡∏î"
                      required
                      helper="‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏≥‡∏Å‡∏≤‡∏£"
                    />
                    <TimeField
                      name="closeTime"
                      label="‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏¥‡∏î"
                      required
                      helper="‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏¥‡∏î‡∏ó‡∏≥‡∏Å‡∏≤‡∏£"
                    />
                  </div>
                  <div className="mt-3 text-sm text-gray-600">
                    <p>
                      üïê ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£: ‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå - ‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå{' '}
                      {form.watch('openTime') || '10:00'} -{' '}
                      {form.watch('closeTime') || '22:00'}
                    </p>
                  </div>
                </div>
              ) : (
                <div className="space-y-4">
                  <div className="bg-gray-50 rounded-lg p-4">
                    <h3 className="font-medium text-gray-900 mb-3">
                      ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
                    </h3>
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div className="space-y-3">
                        <div className="flex items-center space-x-2">
                          <span className="text-sm font-medium text-gray-700 w-16">
                            ‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå-‡∏®‡∏∏‡∏Å‡∏£‡πå:
                          </span>
                          <TimeField
                            name="hours.mon"
                            label=""
                            className="flex-1"
                          />
                          <span className="text-gray-500">‡∏ñ‡∏∂‡∏á</span>
                          <TimeField
                            name="hours.mon"
                            label=""
                            className="flex-1"
                          />
                        </div>
                        <div className="flex items-center space-x-2">
                          <span className="text-sm font-medium text-gray-700 w-16">
                            ‡πÄ‡∏™‡∏≤‡∏£‡πå-‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå:
                          </span>
                          <TimeField
                            name="hours.sat"
                            label=""
                            className="flex-1"
                          />
                          <span className="text-gray-500">‡∏ñ‡∏∂‡∏á</span>
                          <TimeField
                            name="hours.sat"
                            label=""
                            className="flex-1"
                          />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              )}
            </div>

            <div className="mt-4">
              <TextField
                name="holidayNotice"
                label="‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏ô‡∏±‡∏Å‡∏Ç‡∏±‡∏ï‡∏§‡∏Å‡∏©‡πå/‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á"
                placeholder="‡∏õ‡∏¥‡∏î‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå ‡∏´‡∏£‡∏∑‡∏≠ ‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á 1-15 ‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°"
                helper="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏¥‡πÄ‡∏®‡∏© (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)"
              />
            </div>
          </Card>

          {/* Sticky Bottom Bar with CTA Buttons */}
          <div className="sticky bottom-0 bg-white border-t border-gray-200 px-6 py-4 -mx-6 mt-8">
            <div className="flex justify-between items-center">
              <div className="text-sm text-gray-600">
                {mode === 'edit' ? '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡πâ‡∏≤‡∏á' : '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà'}
              </div>
              <div className="flex space-x-3">
                <button
                  type="button"
                  onClick={() => window.history.back()}
                  disabled={isLoading || isSubmitting}
                  className="px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 focus:ring-2 focus:ring-gray-500 focus:border-gray-500 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
                >
                  ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
                </button>
                <button
                  type="submit"
                  disabled={isLoading || isSubmitting}
                  className="px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 focus:ring-2 focus:ring-green-500 focus:border-green-500 transition-colors flex items-center space-x-2"
                  aria-busy={isLoading || isSubmitting}
                >
                  {isLoading || isSubmitting ? (
                    <>
                      <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin"></div>
                      <span>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å...</span>
                    </>
                  ) : (
                    <>
                      <span>
                        {mode === 'create' ? '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≤‡∏á' : '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç'}
                      </span>
                    </>
                  )}
                </button>
              </div>
            </div>
          </div>
        </form>
      </FormProvider>
    </div>
  );
}
