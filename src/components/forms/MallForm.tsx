import React, { useEffect, useState } from 'react';
import { useForm } from 'react-hook-form';
import { zodResolver } from '@hookform/resolvers/zod';
import { Building, MapPin, Clock, Phone, Globe, Settings, Eye } from 'lucide-react';
import Form from '../ui/form/Form';
import TextField from '../ui/form/fields/TextField';
import SelectField from '../ui/form/fields/SelectField';
import PhoneField from '../ui/form/fields/PhoneField';
import UrlField from '../ui/form/fields/UrlField';
import MapPicker from '../ui/form/fields/MapPicker';
import TimeField from '../ui/form/fields/TimeField';
import Card from '../ui/Card';
import Switch from '../ui/Switch';
import { mallSchema, MallInput } from '../../validation/mall.schema';
import { useSafeSubmit } from '../../hooks/useSafeSubmit';
import { createMall, updateMall } from '../../lib/firestore';
import { toSlug } from '../../lib/firestore';

interface MallFormProps {
  defaultValues?: Partial<MallInput>;
  mode?: "create" | "edit";
  onSuccess?: () => void;
  onCancel?: () => void;
}

export default function MallForm({ 
  defaultValues, 
  mode = "create", 
  onSuccess,
  onCancel 
}: MallFormProps) {
  const [isEveryday, setIsEveryday] = useState(true);
  const [showPreview, setShowPreview] = useState(false);

  const districts = [
    { label: "‡∏õ‡∏ó‡∏∏‡∏°‡∏ß‡∏±‡∏ô", value: "‡∏õ‡∏ó‡∏∏‡∏°‡∏ß‡∏±‡∏ô" },
    { label: "‡∏ö‡∏≤‡∏á‡∏Å‡∏∞‡∏õ‡∏¥", value: "‡∏ö‡∏≤‡∏á‡∏Å‡∏∞‡∏õ‡∏¥" },
    { label: "‡∏´‡πâ‡∏ß‡∏¢‡∏Ç‡∏ß‡∏≤‡∏á", value: "‡∏´‡πâ‡∏ß‡∏¢‡∏Ç‡∏ß‡∏≤‡∏á" },
    { label: "‡∏î‡∏¥‡∏ô‡πÅ‡∏î‡∏á", value: "‡∏î‡∏¥‡∏ô‡πÅ‡∏î‡∏á" },
    { label: "‡∏ß‡∏±‡∏í‡∏ô‡∏≤", value: "‡∏ß‡∏±‡∏í‡∏ô‡∏≤" },
    { label: "‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢", value: "‡∏Ñ‡∏•‡∏≠‡∏á‡πÄ‡∏ï‡∏¢" },
    { label: "‡∏™‡∏ß‡∏ô‡∏´‡∏•‡∏ß‡∏á", value: "‡∏™‡∏ß‡∏ô‡∏´‡∏•‡∏ß‡∏á" },
    { label: "‡∏û‡∏£‡∏∞‡πÇ‡∏Ç‡∏ô‡∏á", value: "‡∏û‡∏£‡∏∞‡πÇ‡∏Ç‡∏ô‡∏á" },
    { label: "‡∏¢‡∏≤‡∏ô‡∏ô‡∏≤‡∏ß‡∏≤", value: "‡∏¢‡∏≤‡∏ô‡∏ô‡∏≤‡∏ß‡∏≤" },
    { label: "‡∏ö‡∏≤‡∏á‡∏Å‡∏∞‡∏õ‡∏¥", value: "‡∏ö‡∏≤‡∏á‡∏Å‡∏∞‡∏õ‡∏¥" },
    { label: "‡∏•‡∏≤‡∏î‡∏û‡∏£‡πâ‡∏≤‡∏ß", value: "‡∏•‡∏≤‡∏î‡∏û‡∏£‡πâ‡∏≤‡∏ß" },
    { label: "‡∏à‡∏ï‡∏∏‡∏à‡∏±‡∏Å‡∏£", value: "‡∏à‡∏ï‡∏∏‡∏à‡∏±‡∏Å‡∏£" },
    { label: "‡∏≠‡∏∑‡πà‡∏ô‡πÜ", value: "‡∏≠‡∏∑‡πà‡∏ô‡πÜ" }
  ];

  const categories = [
    { label: "‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value: "shopping_mall" },
    { label: "‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡∏°‡∏≠‡∏•‡∏•‡πå", value: "community_mall" },
    { label: "‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", value: "department_store" },
    { label: "‡∏≠‡∏∑‡πà‡∏ô‡πÜ", value: "other" }
  ];

  const form = useForm<MallInput>({
    resolver: zodResolver(mallSchema),
    defaultValues: {
      displayName: "",
      slug: "",
      category: "shopping_mall",
      description: "",
      address: "",
      district: "",
      location: { lat: 0, lng: 0 },
      floors: undefined,
      hours: {
        mode: "everyday",
        open: "10:00",
        close: "22:00"
      },
      holidayNotice: "",
      phone: "",
      website: "",
      facebook: "",
      line: "",
      status: "open",
      source: "manual",
      ...defaultValues
    },
    mode: "onSubmit"
  });

  const { run, isLoading } = useSafeSubmit({
    formName: `mall_${mode}`,
    successMessage: mode === "create" ? "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à üéâ" : "‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à üéâ",
    errorMessage: mode === "create" ? "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ" : "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ"
  });

  // Auto-generate slug from displayName
  const displayName = form.watch("displayName");
  useEffect(() => {
    if (displayName && mode === "create") {
      form.setValue("slug", toSlug(displayName));
    }
  }, [displayName, form, mode]);

  // Auto-https for website
  const handleWebsiteBlur = (e: React.FocusEvent<HTMLInputElement>) => {
    const value = e.target.value.trim();
    if (value && !/^https?:\/\//.test(value)) {
      form.setValue("website", "https://" + value);
    }
  };

  const handleSubmit = async (values: MallInput) => {
    await run(async () => {
      if (mode === "create") {
        await createMall({
          ...values,
          slug: toSlug(values.displayName)
        });
      } else {
        console.log("Edit mode not implemented yet");
      }
      onSuccess?.();
    });
  };

  const formValues = form.watch();

  return (
    <div className="min-h-screen bg-gray-50">
      <Form form={form} onSubmit={handleSubmit} className="space-y-6">
        <div className="grid gap-6 md:grid-cols-2">
          {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å */}
          <Card 
            title="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏•‡∏±‡∏Å" 
            description="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
            className="md:col-span-1"
          >
            <div className="space-y-4">
              <TextField
                name="displayName"
                label="‡∏ä‡∏∑‡πà‡∏≠‡∏´‡πâ‡∏≤‡∏á"
                placeholder="‡πÄ‡∏ä‡πà‡∏ô Central Rama 9"
                required
                helper="‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏´‡πá‡∏ô"
              />
              
              <TextField
                name="slug"
                label="Slug"
                placeholder="central-rama-9"
                helper="URL-friendly name (auto-generated)"
                disabled
              />
              
              <SelectField
                name="category"
                label="‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà"
                options={categories}
                helper="‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
              />
              
              <TextField
                name="description"
                label="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏±‡πâ‡∏ô"
                placeholder="‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà‡πÉ‡∏à‡∏Å‡∏•‡∏≤‡∏á‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø"
                helper="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏±‡πâ‡∏ô‡πÜ ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏´‡πâ‡∏≤‡∏á"
                multiline
                rows={3}
              />
            </div>
          </Card>

          {/* ‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á */}
          <Card 
            title="‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á" 
            description="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏•‡∏∞‡∏û‡∏¥‡∏Å‡∏±‡∏î"
            className="md:col-span-1"
          >
            <div className="space-y-4">
              <TextField
                name="address"
                label="‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà"
                placeholder="991 Rama I Rd, Pathum Wan, Bangkok 10330"
                required
                helper="‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏ï‡πá‡∏°‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
              />
              
              <SelectField
                name="district"
                label="‡πÄ‡∏Ç‡∏ï/‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î"
                options={districts}
                required
                helper="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏Ç‡∏ï‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≤‡∏á"
              />
              
              <MapPicker
                name="location"
                label="‡∏û‡∏¥‡∏Å‡∏±‡∏î"
                required
                helper="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ö‡∏ô‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô"
              />
              
              <TextField
                name="floors"
                label="‡∏ä‡∏±‡πâ‡∏ô/‡∏≠‡∏≤‡∏Ñ‡∏≤‡∏£"
                type="number"
                placeholder="8"
                helper="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≤‡∏á (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)"
              />
            </div>
          </Card>

          {/* ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ */}
          <Card 
            title="‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£" 
            description="‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≤‡∏á"
            className="md:col-span-2"
          >
            <div className="space-y-4">
              <Switch
                checked={isEveryday}
                onCheckedChange={setIsEveryday}
                label="‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô"
              />
              
              {isEveryday ? (
                <div className="grid grid-cols-2 gap-4">
                  <TimeField
                    name="hours.open"
                    label="‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡∏¥‡∏î"
                    required
                    helper="‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏≥‡∏Å‡∏≤‡∏£"
                  />
                  <TimeField
                    name="hours.close"
                    label="‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏¥‡∏î"
                    required
                    helper="‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏¥‡∏î‡∏ó‡∏≥‡∏Å‡∏≤‡∏£"
                  />
                </div>
              ) : (
                <div className="grid md:grid-cols-4 gap-4">
                  <TimeField name="hours.mon" label="‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå" />
                  <TimeField name="hours.tue" label="‡∏≠‡∏±‡∏á‡∏Ñ‡∏≤‡∏£" />
                  <TimeField name="hours.wed" label="‡∏û‡∏∏‡∏ò" />
                  <TimeField name="hours.thu" label="‡∏û‡∏§‡∏´‡∏±‡∏™‡∏ö‡∏î‡∏µ" />
                  <TimeField name="hours.fri" label="‡∏®‡∏∏‡∏Å‡∏£‡πå" />
                  <TimeField name="hours.sat" label="‡πÄ‡∏™‡∏≤‡∏£‡πå" />
                  <TimeField name="hours.sun" label="‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå" />
                </div>
              )}
              
              <TextField
                name="holidayNotice"
                label="‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏ô‡∏±‡∏Å‡∏Ç‡∏±‡∏ï‡∏§‡∏Å‡∏©‡πå/‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á"
                placeholder="‡∏õ‡∏¥‡∏î‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå ‡∏´‡∏£‡∏∑‡∏≠ ‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á 1-15 ‡∏°‡∏Å‡∏£‡∏≤‡∏Ñ‡∏°"
                helper="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏¥‡πÄ‡∏®‡∏© (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)"
                multiline
                rows={2}
              />
            </div>
          </Card>

          {/* ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ */}
          <Card 
            title="‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠" 
            description="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
            className="md:col-span-1"
          >
            <div className="space-y-4">
              <PhoneField
                name="phone"
                label="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£"
                placeholder="02-xxx-xxxx ‡∏´‡∏£‡∏∑‡∏≠ +66 xx xxx xxxx"
                helper="‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏´‡πâ‡∏≤‡∏á"
              />
              
              <UrlField
                name="website"
                label="‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå"
                placeholder="central.co.th"
                helper="‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏≤‡∏á‡∏Å‡∏≤‡∏£ (auto-https)"
                onBlur={handleWebsiteBlur}
              />
              
              <TextField
                name="facebook"
                label="Facebook"
                placeholder="facebook.com/centralplaza"
                helper="Facebook page ‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≤‡∏á"
              />
              
              <TextField
                name="line"
                label="Line"
                placeholder="@centralplaza"
                helper="Line Official Account"
              />
            </div>
          </Card>

          {/* ‡πÄ‡∏°‡∏ï‡∏≤/‡∏£‡∏∞‡∏ö‡∏ö */}
          <Card 
            title="‡πÄ‡∏°‡∏ï‡∏≤/‡∏£‡∏∞‡∏ö‡∏ö" 
            description="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£"
            className="md:col-span-1"
          >
            <div className="space-y-4">
              <SelectField
                name="status"
                label="‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞"
                options={[
                  { label: "‡πÄ‡∏õ‡∏¥‡∏î‡∏ó‡∏≥‡∏Å‡∏≤‡∏£", value: "open" },
                  { label: "‡∏õ‡∏¥‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß", value: "temp_closed" }
                ]}
                helper="‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£"
              />
              
              <TextField
                name="source"
                label="‡πÅ‡∏´‡∏•‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"
                placeholder="manual"
                helper="‡πÅ‡∏´‡∏•‡πà‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"
                disabled
              />
              
              <button
                type="button"
                onClick={() => setShowPreview(!showPreview)}
                className="inline-flex items-center space-x-2 px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200"
              >
                <Eye className="w-4 h-4" />
                <span>‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ö‡∏±‡∏ï‡∏£‡∏´‡πâ‡∏≤‡∏á</span>
              </button>
            </div>
          </Card>
        </div>

        {/* Sticky Footer */}
        <div className="sticky bottom-0 bg-white border-t border-gray-200 px-6 py-4 shadow-lg">
          <div className="flex items-center justify-between max-w-6xl mx-auto">
            <button
              type="button"
              onClick={onCancel}
              className="px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50"
            >
              ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
            </button>
            
            <button
              type="submit"
              disabled={isLoading}
              className="inline-flex items-center space-x-2 px-6 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50"
              aria-busy={isLoading}
            >
              <Building className="w-4 h-4" />
              <span>{mode === "create" ? "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡πâ‡∏≤‡∏á" : "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç"}</span>
            </button>
          </div>
        </div>
      </Form>

      {/* Preview Modal */}
      {showPreview && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
          <div className="bg-white rounded-lg p-6 max-w-md w-full mx-4">
            <h3 className="text-lg font-semibold mb-4">‡∏û‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡∏ö‡∏±‡∏ï‡∏£‡∏´‡πâ‡∏≤‡∏á</h3>
            <div className="space-y-2 text-sm">
              <p><strong>‡∏ä‡∏∑‡πà‡∏≠:</strong> {formValues.displayName}</p>
              <p><strong>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:</strong> {formValues.address}</p>
              <p><strong>‡πÄ‡∏Ç‡∏ï:</strong> {formValues.district}</p>
              <p><strong>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:</strong> {formValues.phone || '‚Äî'}</p>
              <p><strong>‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå:</strong> {formValues.website || '‚Äî'}</p>
            </div>
            <button
              type="button"
              onClick={() => setShowPreview(false)}
              className="mt-4 w-full px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700"
            >
              ‡∏õ‡∏¥‡∏î
            </button>
          </div>
        </div>
      )}
    </div>
  );
}
