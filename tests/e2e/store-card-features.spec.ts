import { test, expect } from "@playwright/test";

test.describe('Store Card Features', () => {
  test.beforeEach(async ({ page, context }) => {
    // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (CentralWorld area)
    await context.grantPermissions(['geolocation']);
    await context.setGeolocation({ latitude: 13.7466, longitude: 100.5347 });
  });

  test('StoreCard shows mall name, floor (resolved) and distance', async ({ page }) => {
    await page.goto('/');

    // ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
    await page.waitForLoadState('networkidle');

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ store card ‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ
    const storeCard = page.locator('[data-testid="store-card"]').first();
    
    // ‡∏£‡∏≠‡πÉ‡∏´‡πâ card ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
    await expect(storeCard).toBeVisible({ timeout: 10000 });

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô
    await expect(storeCard.locator('h3')).toBeVisible();

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡πâ‡∏≤‡∏á (‡∏ñ‡πâ‡∏≤ showMallName = true)
    const mallName = storeCard.locator('p').filter({ hasText: /Central|Siam|Icon|Mega|Terminal/i });
    await expect(mallName).toBeVisible();

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ä‡∏±‡πâ‡∏ô
    const floorInfo = storeCard.locator('text=/‡∏ä‡∏±‡πâ‡∏ô /');
    await expect(floorInfo).toBeVisible();

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á
    const distance = storeCard.locator('text=/‡∏Å‡∏°\\./');
    await expect(distance).toBeVisible();

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
    const category = storeCard.locator('[class*="bg-blue-100"]');
    await expect(category).toBeVisible();

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    const status = storeCard.locator('[class*="bg-green-100"], [class*="bg-yellow-100"], [class*="bg-red-100"]');
    await expect(status).toBeVisible();
  });

  test('StoreCard shows correct floor information', async ({ page }) => {
    await page.goto('/');

    // ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
    await page.waitForLoadState('networkidle');

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ store card
    const storeCard = page.locator('[data-testid="store-card"]').first();
    await expect(storeCard).toBeVisible({ timeout: 10000 });

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏±‡πâ‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏Ñ‡πà floorId)
    const floorInfo = storeCard.locator('text=/‡∏ä‡∏±‡πâ‡∏ô /');
    await expect(floorInfo).toBeVisible();
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏±‡πâ‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÅ‡∏Ñ‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß
    const floorText = await floorInfo.textContent();
    expect(floorText).toMatch(/‡∏ä‡∏±‡πâ‡∏ô [A-Z0-9]+/);
  });

  test('StoreCard shows distance calculation', async ({ page }) => {
    await page.goto('/');

    // ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
    await page.waitForLoadState('networkidle');

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ store card
    const storeCard = page.locator('[data-testid="store-card"]').first();
    await expect(storeCard).toBeVisible({ timeout: 10000 });

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á
    const distance = storeCard.locator('text=/‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á/');
    await expect(distance).toBeVisible();

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏¥‡πÇ‡∏•‡πÄ‡∏°‡∏ï‡∏£
    const distanceText = await distance.textContent();
    expect(distanceText).toMatch(/‡∏£‡∏∞‡∏¢‡∏∞‡∏ó‡∏≤‡∏á [0-9]+\.[0-9]+ ‡∏Å‡∏°\./);
  });

  test('StoreCard shows mall information correctly', async ({ page }) => {
    await page.goto('/');

    // ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
    await page.waitForLoadState('networkidle');

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ store card
    const storeCard = page.locator('[data-testid="store-card"]').first();
    await expect(storeCard).toBeVisible({ timeout: 10000 });

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏´‡πâ‡∏≤‡∏á
    const mallName = storeCard.locator('p').filter({ hasText: /Central|Siam|Icon|Mega|Terminal/i });
    await expect(mallName).toBeVisible();

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏´‡πâ‡∏≤‡∏á‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà slug
    const mallText = await mallName.textContent();
    expect(mallText).not.toMatch(/central-|siam-|icon-|mega-|terminal-/);
  });

  test('StoreCard handles missing data gracefully', async ({ page }) => {
    await page.goto('/');

    // ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
    await page.waitForLoadState('networkidle');

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ store card
    const storeCard = page.locator('[data-testid="store-card"]').first();
    await expect(storeCard).toBeVisible({ timeout: 10000 });

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ loading state
    const loadingSpinner = storeCard.locator('.animate-pulse');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ error state
    const errorMessage = storeCard.locator('text=/error|Error|ERROR/');
    await expect(errorMessage).not.toBeVisible();
  });

  test('StoreCard shows unit information when available', async ({ page }) => {
    await page.goto('/');

    // ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
    await page.waitForLoadState('networkidle');

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ store card
    const storeCard = page.locator('[data-testid="store-card"]').first();
    await expect(storeCard).toBeVisible({ timeout: 10000 });

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏π‡∏ô‡∏¥‡∏ï (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    const unitInfo = storeCard.locator('text=/‡∏¢‡∏π‡∏ô‡∏¥‡∏ï/');
    
    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏¢‡∏π‡∏ô‡∏¥‡∏ï ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    if (await unitInfo.isVisible()) {
      const unitText = await unitInfo.textContent();
      expect(unitText).toMatch(/‡∏¢‡∏π‡∏ô‡∏¥‡∏ï [A-Z0-9-]+/);
    }
  });

  test('StoreCard shows hours when available', async ({ page }) => {
    await page.goto('/');

    // ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
    await page.waitForLoadState('networkidle');

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ store card
    const storeCard = page.locator('[data-testid="store-card"]').first();
    await expect(storeCard).toBeVisible({ timeout: 10000 });

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    const hoursInfo = storeCard.locator('text=/[0-9]{2}:[0-9]{2}/');
    
    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    if (await hoursInfo.isVisible()) {
      const hoursText = await hoursInfo.textContent();
      expect(hoursText).toMatch(/[0-9]{2}:[0-9]{2}/);
    }
  });

  test('StoreCard shows phone when available', async ({ page }) => {
    await page.goto('/');

    // ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
    await page.waitForLoadState('networkidle');

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ store card
    const storeCard = page.locator('[data-testid="store-card"]').first();
    await expect(storeCard).toBeVisible({ timeout: 10000 });

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    const phoneInfo = storeCard.locator('text=/üìû/');
    
    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    if (await phoneInfo.isVisible()) {
      const phoneText = await phoneInfo.textContent();
      expect(phoneText).toMatch(/üìû [0-9-+]+/);
    }
  });
});
