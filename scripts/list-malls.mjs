#!/usr/bin/env node

import { initializeApp } from 'firebase/app';
import { getFirestore, collection, getDocs, query, orderBy } from 'firebase/firestore';
import { readFileSync } from 'fs';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

// Load Firebase config from service account
const serviceAccountPath = join(__dirname, '..', 'service-account.json');
const serviceAccount = JSON.parse(readFileSync(serviceAccountPath, 'utf8'));

// Initialize Firebase
const app = initializeApp({
  projectId: serviceAccount.project_id,
  // Add other config if needed
});

const db = getFirestore(app);

async function listMalls() {
  try {
    console.log('üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏´‡πâ‡∏≤‡∏á‡∏à‡∏≤‡∏Å Firestore...\n');
    
    const mallsRef = collection(db, 'malls');
    const q = query(mallsRef, orderBy('displayName'));
    const snapshot = await getDocs(q);
    
    if (snapshot.empty) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡πâ‡∏≤‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö');
      return;
    }
    
    console.log(`üìä ‡∏û‡∏ö‡∏´‡πâ‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${snapshot.docs.length} ‡πÅ‡∏´‡πà‡∏á\n`);
    console.log('=' .repeat(80));
    console.log('‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤');
    console.log('=' .repeat(80));
    
    snapshot.docs.forEach((doc, index) => {
      const data = doc.data();
      console.log(`${index + 1}. ${data.displayName || data.name || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠'}`);
      console.log(`   ID: ${doc.id}`);
      console.log(`   ‡∏ä‡∏∑‡πà‡∏≠ Slug: ${data.name || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
      console.log(`   ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: ${data.address || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
      console.log(`   ‡πÄ‡∏Ç‡∏ï: ${data.district || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
      console.log(`   ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£: ${data.contact?.phone || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
      console.log(`   ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡∏¥‡∏î-‡∏õ‡∏¥‡∏î: ${data.hours?.open || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'} - ${data.hours?.close || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
      console.log(`   ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ${data.status || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
      console.log(`   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡πâ‡∏≤‡∏ô: ${data.storeCount || 0} ‡∏£‡πâ‡∏≤‡∏ô`);
      console.log(`   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πâ‡∏ô: ${data.floorCount || 0} ‡∏ä‡∏±‡πâ‡∏ô`);
      console.log(`   ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: ${data.createdAt ? new Date(data.createdAt.toDate()).toLocaleDateString('th-TH') : '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
      console.log(`   ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: ${data.updatedAt ? new Date(data.updatedAt.toDate()).toLocaleDateString('th-TH') : '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'}`);
      console.log('-'.repeat(80));
    });
    
    console.log(`\n‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏£‡∏ß‡∏° ${snapshot.docs.length} ‡∏´‡πâ‡∏≤‡∏á`);
    
  } catch (error) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', error.message);
    process.exit(1);
  }
}

// Run the script
listMalls();
